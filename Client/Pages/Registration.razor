@page "/Registration"
@using ECommerceApp.Shared
@using ECommerceApp.Shared.DTO
@inject ECommerceApp.Client.Services.IUserController Users
@inject NavigationManager NavMan
@inject HttpClient client
@inject IToastService ToastService

<link href="_content/Blazored.Toast/blazored-toast.css" rel="stylesheet" />
<link href="css/Loading.css" rel="stylesheet" />

<PageTitle>Registration Page</PageTitle>

<h3>Registration</h3>

@if (Users.users == null)
{

    <div id="circle">
                <div class="loader">
                    <div class="loader">
                        <div class="loader">
                            <div class="loader">

                            </div>
                        </div>
                    </div>
                </div>
            </div> 
}
else
{
    
    <EditForm Model="@userdto" OnValidSubmit="Register">

        <DataAnnotationsValidator/>

        <div class = "form-group">

            <label for="Username">Username</label>
            <InputText id="Username" @bind-Value="userdto.Username" class = "form-control"></InputText>
            <ValidationMessage For = "() => userdto.Username" />

        </div>

        <br>

        <div class = "form-group">

            <label for="Email">Email</label>
            <InputText id="Email" @bind-Value="userdto.Email" type = "email" class = "form-control"></InputText>
            <ValidationMessage For = "() => userdto.Email" />

        </div>

        <br>

        <div class = "form-group">

            <label for="Password">Password</label>
            <InputText id="Password" @bind-Value="userdto.Password" type = "password" class = "form-control"></InputText>
            <ValidationMessage For = "() => userdto.Password" />

        </div>

        <br>

        <div class = "form-group">

            <label for="ConfirmPassword">ConfirmPassword</label>
            <InputText id="Password2" @bind-Value = "userdto.ConfirmPassword" type = "password" class = "form-control">weg</InputText>
            <ValidationMessage For = "() => userdto.ConfirmPassword" />

        </div>

        <br>

        <div>

            <button type = "submit" class = "btn btn-primary">Submit</button>

        </div>

    </EditForm>

}


@code {

    private UserDTO userdto = new UserDTO();

    private User user = new User();

    protected override async Task OnInitializedAsync()
    {

        await Users.GetUsers();

    }

    private async Task Register() {

        await Users.AddUser(userdto);

        if (Users.UserExists == true)
        {

            ToastService.ShowError("User With This Email Already Exists");

        }
        else if (Users.UserExists == false) { 
        
            NavMan.NavigateTo("/Login");

            ToastService.ShowSuccess("Registered Successfully");
        
        }

    }

}
