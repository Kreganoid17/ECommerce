@page "/Login"
@using ECommerceApp.Shared
@using ECommerceApp.Shared.DTO
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavMan
@inject ECommerceApp.Client.Services.ILoginUserController LoginUserController
@inject AuthenticationStateProvider AuthStateProvider
@inject IToastService ToastService
@inject HttpClient client

<link href="_content/Blazored.Toast/blazored-toast.css" rel="stylesheet" />

<h3>Login</h3>

<EditForm Model="@login" OnValidSubmit="LoginUser">

    <DataAnnotationsValidator/>

    <div class = "form-group">

        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="login.Email" type = "email" class = "form-control"></InputText>
        <ValidationMessage For = "() => login.Email" />

    </div>

    <br>

    <div class = "form-group">

        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="login.Password" type = "password" class = "form-control"></InputText>
        <ValidationMessage For = "() => login.Password" />

    </div>

    <br>

    <button type = "submit" class = "btn btn-primary">Login</button>

</EditForm>

@code {
    private LoginDTO login = new LoginDTO();


    private async void LoginUser()
    {

        await LoginUserController.IsValidUser(login);

        var isvalid = LoginUserController.IsValid;

        if (isvalid == true)
        {

            await AuthStateProvider.GetAuthenticationStateAsync();

            NavMan.NavigateTo("/ProductPage");

            await LocalStorage.SetItemAsync("cart", new List<CartDTO>());

        }
        else if(isvalid == false)
        {
                
            ToastService.ShowError("Invalid User");

        }

        }

    }


