@page "/ProductDetails/{Id:int}"
@using ECommerceApp.Shared
@using ECommerceApp.Shared.DTO
@inject ECommerceApp.Client.Services.IProductsController Products 
@inject ECommerceApp.Client.Services.ICartController Cart
@inject IToastService ToastService
@inject NavigationManager NavMan
@inject ISyncLocalStorageService LocalStorage

<link href="_content/Blazored.Toast/blazored-toast.css" rel="stylesheet" />
<link href="css/Loading.css" rel="stylesheet" />

<h3>Product Details</h3>


@if(Products.product == null)
{

    <div id="circle">
                <div class="loader">
                    <div class="loader">
                        <div class="loader">
                            <div class="loader">

                            </div>
                        </div>
                    </div>
                </div>
            </div>   

}
else
{

    <div class = "col-12">

        <div class = "row">

            <div class = "col-12 text-center">

                <h1>@Products.product.ProductName</h1>

            </div>

        </div>

        <div class = "row">

            <div class = "col-12 text-center">

                @{string ImgSrc = "Content/Images/" + @Products.product.ProductName + ".jpg";}

                <img src = "@ImgSrc">

            </div>

        </div>

        <br>

        <div class = "row">

            <div class = "col-12">

                <p><b><u>Description</u></b></p>
                <p>@Products.product.Description</p>

            </div>

        </div>

        <br>

        <div class = "row">

            <div class = "col-6">

                
                <p>Unit Price: R @Products.product.Price</p>

            </div>

            <div class = "col-6">

                @if(Products.product.Quantity > 0)
                {
                    
                    <p>In Stock: @Products.product.Quantity</p>

                    


                }else if(Products.product.Quantity <= 0)
                {
                    
                     <p>Out of Stock</p>

                }

            </div>

        </div>

    </div>

<div class = "row">
        
<div class = "col-6">

    <button @onclick = "() => Back()" class= "btn btn-primary">Back</button>

</div>



<AuthorizeView>

    <Authorized>

        <br>

        <div class = "col-6">

        @if (Products.product.Quantity > 0)
        {

            var cartitems = LocalStorage.GetItem<List<Product>>("cart");

            var Citem = cartitems.Find(x => x.ProductID == @Products.product.ProductID);

                if (Citem != null) { 
                
                    <div>

                        <p>Item In Cart</p>

                    </div>

                }else if(Citem == null)
                {
                    
                    <div>

                        <button @onclick = "() => AddToCart(Products.product)" class = "btn btn-primary">Add To Cart</button>

                    </div>

                }

        }

        </div>

    </Authorized>

</AuthorizeView>

</div>

}

@code {

    [Parameter]
    public int Id { get; set; }



    protected override async Task OnParametersSetAsync()
    {

        await Products.GetProduct(Id);

    }

    private void Back() {

        NavMan.NavigateTo("/ProductPage");

    }

    private void AddToCart(Product product)
    {

        Cart.AddToCart(product);

        Cart.OnProductChange += StateHasChanged;

        InvokeAsync(StateHasChanged);

        ToastService.ShowSuccess(product.ProductName + " Has Been Added", "Added To Cart");

    }

}

