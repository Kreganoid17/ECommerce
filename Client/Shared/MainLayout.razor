@using ECommerceApp.Shared
@using ECommerceApp.Shared.DTO
@inherits LayoutComponentBase
@implements IDisposable
@inject ISyncLocalStorageService LocalStorage
@inject ECommerceApp.Client.Services.ICartController CartController
@inject ECommerceApp.Client.Services.IProductsController ProductController
@inject NavigationManager NavMan
    

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>

        <div class = "col">

            <div class = "row w-100">

            <AuthorizeView>

                <Authorized>

                    <div class="col-10 p-2 mx-5">

                    @{AuthDTO username = LocalStorage.GetItem<AuthDTO>("User");}

                    <div class = "text-center" style = "margin-left:200px;">

                        <h1>Welcome Back @username.Username To The Gaming Corner!</h1>

                    </div>

                    </div>

                    <div class="col">

                    <div class = "p-2 mx-2">

                    <button class = "btn btn-primary p-2" @onclick = "GoToCartPage">
                        
                        <i class = "oi oi-cart mx-2"></i> Cart

                        <span class = "badge badge-pill badge-light mx-1">@GetCartCount()</span>
                    
                    </button>

                    </div>

                    </div>

                </Authorized>

                <NotAuthorized>

                    <div class="col-12 p-2">

                    <div class = "text-center">

                        <h1>Welcome To The Gaming Corner!</h1>

                    </div>
                    
                </div>

                </NotAuthorized>

               </AuthorizeView>

        

        </div>

        </div>

        <article class="content">
            @Body
        </article>
    </main>
</div>
<BlazoredToasts/>

@code{
    

    protected override void OnInitialized()
    {

        CartController.OnCartChange += StateHasChanged;

    }

    public void Dispose()
    {

        CartController.OnCartChange -= StateHasChanged;

    }

    private void GoToCartPage()
    {

        NavMan.NavigateTo("/Cart");

    }

    private int GetCartCount()
    {

        var cart = LocalStorage.GetItem<List<Product>>("cart");

        if (cart == null)
        {

            return 0;

        }
        else if (cart != null) { 

            return cart.Count;

        }

        return 0;

    }



}


