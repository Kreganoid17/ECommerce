@using ECommerceApp.Client.Services
@using ECommerceApp.Shared
@using ECommerceApp.Shared.DTO
@inject ILocalStorageService LocalStorage
@inject ICartController CartController
@inject AuthenticationStateProvider AuthStateProvider


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">The Gaming Corner</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <AuthorizeView>

                <NotAuthorized>

                    <NavLink class="nav-link" href="Registration">
                        <span class="oi oi-people" aria-hidden="true"></span> Register
                    </NavLink>

                </NotAuthorized>

            </AuthorizeView>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ProductPage">
                <span class="oi oi-box" aria-hidden="true"></span> Products
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <AuthorizeView>

                <NotAuthorized>

                    <NavLink class="nav-link" href="Login">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Login
                    </NavLink>

                </NotAuthorized>

                <Authorized>

                    <NavLink class="nav-link"  href="Orders">
                        <span class="oi oi-timer" aria-hidden="true" ></span> Orders
                    </NavLink>

                    <NavLink class="nav-link" @onclick="LogOut" href="login">
                        <span class="oi oi-account-logout" aria-hidden="true" ></span> Log Out
                    </NavLink>

                </Authorized>

            </AuthorizeView>

        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void LogOut()
    {
        CartDBDTO cart = new CartDBDTO();

        cart.cart = await LocalStorage.GetItemAsync<List<CartDTO>>("cart");

        var userid = await LocalStorage.GetItemAsync<AuthDTO>("User");

        cart.userid = userid.UserID;

        await CartController.AddCartToDB(cart);

        await LocalStorage.RemoveItemAsync("User");
        await LocalStorage.RemoveItemAsync("cart");
        await AuthStateProvider.GetAuthenticationStateAsync();

    }

}


